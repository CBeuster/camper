(function(){$(document).ready(function(){return $(".delete-entry").click(function(){var a,b;return a=$(this).data("entry"),b=$(this).data("url"),$.ajax({url:b,type:"POST",data:{method:"delete",entry:a},success:function(){return window.location.reload()}}),!1})})}).call(this),function(){$(document).ready(function(){return $("#show-add-form").click(function(){return $("#add-form-view").show(),$("#show-add-form").hide(),$('[data-toggle="tooltip"]').tooltip()}),$("#cancel-add-form").click(function(){return $("#add-form-view").hide(),$("#show-add-form").show(),!1}),$("#start_time").timepicker({timeFormat:"G:i"}),$("#end_time").timepicker({timeFormat:"G:i"}),$("#date").datepicker({format:"d.m.yyyy",autoclose:!0,language:$("body").data("lang")}),$("#own_location").change(function(){return this.checked?$("#location-view").show():$("#location-view").hide()}),$(".delete-event").click(function(){var a,b;return a=$(this).data("event"),b=$(this).data("url"),$.ajax({url:b,type:"POST",data:{method:"delete",event:a},success:function(){return window.location.reload()}}),!1}),$("#own_location").is(":checked")&&$("#location-view").show(),$("#bigmap").bigmap(),$("#lookup-button").click(function(){var a,b,c,d;return c=$("#location_street").val(),d=$("#location_zip").val(),a=$("#location_city").val(),b=$("#location_country").val(),$("#location-picker").modal("show"),$("#bigmap").bigmap("lookup",c,d,a,b),!1}),$("#show-on-map").click(function(){var a,b,c,d,e,f;return e=$("#location_street").val(),f=$("#location_zip").val(),a=$("#location_city").val(),b=$("#location_country").val(),""===e?void $("#error-street").popover("show"):""===a?void $("#error-street").popover("show"):($("#location-picker").modal("show"),$("#location_lat").val()?(c=$("#location_lat").val(),d=$("#location_lng").val(),$("#bigmap").bigmap("set_coords",c,d),$("#bigmap").bigmap("place")):$("#bigmap").bigmap("lookup",e,f,a,b),!1)}),$("#location-error-confirm").click(function(){return $("#location-error-box").hide(),$("#location-picker").modal("hide")}),$("#save-location-button").click(function(){return $("#location_lat").val($("#tmp_lat").val()),$("#location_lng").val($("#tmp_lng").val()),$("#own_coords").val("yes"),$("#location-picker").modal("hide")})})}.call(this),function(){var a,b;$.fn.serializeObject=function(){var a,b;return b={},a=this.serializeArray(),$.each(a,function(){return void 0!==b[this.name]?(b[this.name].push||(b[this.name]=[b[this.name]]),b[this.name].push(this.value||"")):b[this.name]=this.value||""}),b},a=function(){function a(a,b){return this.elem=a,this.options=b,this.state="view",this.url=$(this.elem).closest("form").attr("action"),this}return a.prototype.clicked=function(){return this.state="view"===this.state?"edit":"view","edit"===this.state?this.show_edit_field():void 0},a.prototype.show_edit_field=function(){var a;return a=$(this.elem).data("field"),$.ajax({url:this.url,type:"GET",data:{field:a},success:function(a){return function(b){return a.payload=$(a.elem).html(),$(a.elem).html(b.html),a.escape()}}(this)})},a.prototype.close_edit_field=function(){return this.state="view",$(this.elem).html(this.payload),this.escape()},a.prototype.escape=function(){return"view"===this.state?$(document).off("keyup.editable.keys"):($(document).on("keyup.editable.keys",function(a){return function(b){return 27===b.which&&a.close_edit_field(),13===b.which&&console.log("enter"),b.preventDefault()}}(this)),$(this.elem).closest("form").submit(function(a){return a.preventDefault(),!1}))},a}(),$.fn.editable=function(b){var c;return null==b&&(b={}),c=function(b){var c,d,e;return c=$(this),d=$(this).data("editable"),e="object"==typeof b&&b,d||(d=new a(this,e),c.data("editable",d)),d.clicked()},$(this).each(c),this},$.fn.limitchars=function(a){var b;return null==a&&(a={}),b=function(){var a,b;return a=$(this),b="1234567890abcdefghijklmnopqrstuvwxyz-_",$(this).keypress(function(a){var c;return c=parseInt(a.which),13!==c&&8!==c&&0!==c&&a.ctrlKey===!1&&a.altKey===!1?-1!==b.indexOf(String.fromCharCode(c)):!0})},$(this).each(b),this},$.fn.publish_date=function(a){var b,c,d,e,f;return null==a&&(a={}),f=null,c=function(){var a,c;return f=this,a=$(f).find(".date").datepicker("getDate"),a=$(f).find(".time").timepicker("getTime",[a]),c=new Date,a>=c?e():b(),$(f).find(".edit-published").click(function(){return e()}),$(f).find(".set-now").click(function(){return d(),b()})},d=function(){var a;return a=new Date,$(f).find(".date").datepicker("setDate",[a]),$(f).find(".time").timepicker("setTime",a)},e=function(){return $(f).find(".immediate-button").hide(),$(f).find(".date-edit").show(),$(f).find(".immediate").val("False")},b=function(){return $(f).find(".date-edit").hide(),$(f).find(".immediate-button").show(),$(f).find(".immediate").val("True")},$(this).each(c),this},$.fn.view_edit_group=function(a){var b,c;return null==a&&(a={}),c=null,b=function(){return c=this,$(c).find(".input-switch").click(function(){return $(c).find(".input-controls").show(),$(c).find(".input-view").hide()}),$(c).find(".cancel-switch").click(function(){return $(c).find(".input-controls").hide(),$(c).find(".input-view").show()}),$(c).find(".submit").click(function(){var a,b;return b=$(c).data("url"),a=$(c).find("form").serializeObject(),$.ajax({url:b,type:"POST",data:a,success:function(){return function(a){return $(".workflow-"+a.new_state).attr("selected","selected"),$(".workflow-state").text(a.new_text_state),$(c).find(".input-controls").hide(),$(c).find(".input-view").show(),"published"===a.new_state?$("#publish-button").hide():$("#publish-button").show()}}(this)})})},$(this).each(b),this},b=function(a){var c,d,e;return c=function(b,c){var d;return this.options=c,this.$body=a(document.body),this.$element=a(b),this.map=null,this.marker=null,L.Icon.Default.imagePath="/static/img",L.mapbox.accessToken=this.options.accesstoken,console.log("init"),c={zoom:14},console.log(this.options),this.map=L.mapbox.map(this.$element.attr("id"),this.options.mapid,c),this.lat=null,this.lng=null,d=this.map,a("#location-picker").on("shown.bs.modal",function(){return a(".action-overlay").show(),a("#location-error").hide(),a(".spinner-overlay").hide(),d.invalidateSize(),a("#save-location-button").prop("disabled",!0)}),this},c.DEFAULTS={location_url:"",lat:null,lng:null,accesstoken:"",admin:0,mapid:"",locationurl:"",orig_lat:null,orig_lng:null,wobble:!1},c.prototype.set_coords=function(b,c){return this.lat=b,this.lng=c,a("#save-location-button").prop("disabled",!1)},c.prototype.place=function(){var b,c,d;return d=this,this.marker&&this.map.removeLayer(this.marker),this.map.setView([this.lat,this.lng]),c={},1===this.options.admin&&(c={draggable:!0}),this.marker=L.marker([this.lat,this.lng],c).addTo(this.map),b=function(){var b;return b=d.marker.getLatLng(),d.lat=b.lat,d.lng=b.lng,a("#tmp_lat").val(b.lat),a("#tmp_lng").val(b.lng)},this.marker.on("dragend",b)},c.prototype.random=function(){var a,b,c,d;return c=(Math.random()-.5)/100,d=(Math.random()-.5)/100,a=this.map.getCenter(),a.lat=a.lat+c,a.lng=a.lng+d,this.map.panTo(a),b=this,this.wobble?setTimeout(function(){return b.random()},300):void 0},c.prototype.lookup=function(c,d,e,f,g){return a("#location-loader").show(),a("#action-overlay").hide(),a(".spinner-overlay").show(),a("#location-error-box").hide(),a(".loader").show(),this.wobble=!0,this.random(),b=this,a.ajax({url:this.options.locationurl,type:"GET",data:a.param({city:e,zip:d,street:c,country:f}),success:function(c){return a(".loader").hide(),b.wobble=!1,c.success?(a(".action-overlay").show(),a("#location-error").hide(),a(".spinner-overlay").hide(),a("#save-location-button").prop("disabled",!1),b.lat=c.lat,b.lng=c.lng,b.orig_lat=c.lat,b.orig_lng=c.lng,b.place(),g?g(c):void 0):(a("#location-error-box").show(),void a("#location-error").text(c.msg).show())},error:function(){return a("#location-error-box").show(),a("#location-error").text("an unknown error occurred, please try again").show(),a("#location-error").show(),a(".action-overlay").hide(),a(".loader").hide(),b.wobble=!1}})},d=function(d){var e;return e=arguments,this.each(function(){var f,g,h;return f=a(this),g=f.data("bc.bigmap"),h=a.extend({},c.DEFAULTS,f.data(),"object"==typeof d&&d),g||(b=new c(this,h),f.data("bc.bigmap",b)),"string"==typeof d?(e=a.map(e,function(a){return[a]}),g[d].apply(g,e.slice(1))):void 0})},e=a.fn.bigmap,a.fn.bigmap=d,a.fn.bigmap.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.bigmap=e,this}},b(jQuery),$(document).ready(function(){return $(".colorpicker-container").colorpicker(),$(".urlscheme").limitchars(),$(".action-confirm").click(function(){var a;return a=$(this).data("confirm"),confirm(a)?!0:!1}),$("body").on("click.editable",'[data-toggle="editable"]',function(a){return $(a.target).editable()}),$(".datetime-widget .time").timepicker({timeFormat:"G:i",show24:!0}),$(".datetime-widget .date").datepicker({format:"d.m.yyyy",autoclose:!0,language:$("body").data("lang")}),$(".datetime-widget").publish_date(),$(".view-edit-group").view_edit_group(),$(".change-state").click(function(){var a,b;return b=$(this).data("url"),a=$(this).data("state"),$.ajax({url:this.url,type:"POST",data:{state:a,field:field},success:function(a){return function(b){return a.payload=$(a.elem).html(),$(a.elem).html(b.html),a.escape()}}(this)})}),tinyMCE.baseURL="/static/js/components/tinymce/",tinymce.init({selector:".wysiwyg",menubar:!1,plugins:["image","link","code"],toolbar:"undo redo | formatselect | bold italic | bullist numlist | blockquote | removeformat | image link | code",content_css:"/static/css/tinymce.css"}),$("#bigmap").bigmap(),$("#show-on-map").click(function(){var a,b,c,d,e,f;return e=$("#location_street").val(),f=$("#location_zip").val(),a=$("#location_city").val(),b=$("#location_country").val(),""===e?void $("#error-street").popover("show"):""===a?void $("#error-city").popover("show"):($("#location-picker").modal("show"),$("#location_lat").val()?(c=$("#location_lat").val(),d=$("#location_lng").val(),$("#bigmap").bigmap("set_coords",c,d),$("#bigmap").bigmap("place")):$("#bigmap").bigmap("lookup",e,f,a,b),!1)}),$("#lookup-button").click(function(){var a,b,c,d;return c=$("#location_street").val(),d=$("#location_zip").val(),a=$("#location_city").val(),b=$("#location_country").val(),$("#location-picker").modal("show"),$("#bigmap").bigmap("lookup",c,d,a,b),!1}),$("#location-error-confirm").click(function(){return $("#location-error-box").hide(),$("#location-picker").modal("hide")}),$("#save-location-button").click(function(){return $("#location_lat").val($("#tmp_lat").val()),$("#location_lng").val($("#tmp_lng").val()),$("#own_coords").val("yes"),$("#location-picker").modal("hide")}),$(".datepicker").datepicker({format:"d.m.yyyy",autoclose:!0,language:$("body").data("lang")}),$(".parsley-validate").length&&$(".parsley-validate").parsley({excluded:"input[type=file]",errorsWrapper:"<span class='errors-block help-block'></span>",errorsContainer:function(a){return a.$element.closest("div")}}).addAsyncValidator("bcslug",function(a){return a.responseJSON?a.responseJSON.validated:!1},CONFIG.slug_validation_url).addAsyncValidator("pageslug",function(a){return a.responseJSON?a.responseJSON.validated:!1},CONFIG.page_slug_validation_url),$("#bcform #slug").slugify("#name",{separator:"",whitespace:""}),$("#pageform #slug").slugify("#title",{separator:"",whitespace:"-"}),$(".delete-event").click(function(){var a,b;return a=$(this).data("event"),b=$(this).data("url"),$.ajax({url:b,type:"POST",data:{method:"delete",event:a},success:function(){return window.location.reload()}}),!1}),$(".listing").on("click",".confirmdelete",function(){var a,b;return a=$(this).data("entry"),b=$(this).data("url"),$.ajax({url:b,type:"POST",data:{method:"delete",entry:a},success:function(a){return a.reload?window.location.reload():a.url?window.location=b:a.id?($("#"+a.id).css({"background-color":"#eaa"}),$("#"+a.id).slideUp()):void 0}}),!1})})}.call(this),function(){$(document).ready(function(){return $("#imagelisting").on("click",".imagedetailblock .edittoggle",function(){var a;return $(this).closest(".imagedetails").hide(),a=$(this).data("image-id"),$("#imageform-"+a).show()}),$("#imagelisting").on("click",".imagedetailblock .canceltoggle",function(){var a;return $(this).closest(".imagedetailform").hide(),a=$(this).data("image-id"),$("#details-"+a).show()}),$("#imagelisting").on("submit",".imagedetailform",function(){var a,b;return event.preventDefault(),a=$(this).data("image-id"),b=$(this).attr("action"),$.ajax({type:"post",url:b,data:$(this).serialize(),contentType:"application/x-www-form-urlencoded",success:function(b){return $("#block-"+a).replaceWith($(b.html)),$("#imageform-"+a).hide(),$("#details-"+a).show()},error:function(){return alert("an error occurred, please try again later")}})}),$(".listing").on("click",".deletebtn",function(){var a,b,c;return a=$(this).data("image-id"),c=$(this).data("url"),b=$("body").data("i18n-areyousure"),confirm(b)&&$.ajax({url:c,type:"POST",data:{method:"delete",entry:a},success:function(a){return a.id?($("#"+a.id).css({"background-color":"#eaa"}),$("#"+a.id).slideUp()):void 0}}),!1}),$("#edittitle").click(function(){return $("#titleform").show(),$("#titleview").hide(),!1}),$("#canceltitle").click(function(){return $("#titleform").hide(),$("#titleview").show(),!1}),$("#titleform").submit(function(){var a;return event.preventDefault(),a=$(this).attr("action"),$.ajax({type:"post",url:a,data:$(this).serialize(),contentType:"application/x-www-form-urlencoded",success:function(a){return $("#gallerytitle").val(a.title),$("#titleview span").text(a.title),$("#titleform").hide(),$("#titleview").show()},error:function(){return alert("an error occurred, please try again later")}})})})}.call(this),function(){"s4 = () ->\n    Math.floor((1 + Math.random()) * 0x10000)\n           .toString(16)\n           .substring(1)\n\nguid = () ->\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n           s4() + '-' + s4() + s4() + s4()\n\napp = angular.module('barcamptool', ['ui.timepicker', 'ui.sortable', 'ngTagsInput', 'ui.autocomplete']);\n\napp.filter 'slice', () ->\n    return (arr, start, end) ->\n        if arr \n            return arr.slice(start, end)\n        else\n            return arr\n\n\napp.config ($interpolateProvider) ->\n    $interpolateProvider\n    .startSymbol('{[{')\n    .endSymbol('}]}')\n\n\napp.controller 'SessionBoardCtrl', ($scope, $http, $q, $filter) ->\n\n    # set some defaults\n\n    $scope.sessionplan = {}\n\n    $scope.sortableOptions =\n        axis: 'x'\n        items: \"td\"\n        placeholder: \"sortable-placeholder\"\n        containment: 'parent'\n        cancel: \".not-sortable\"\n        opacity: 0.5\n\n    $scope.room = {\n        name: '',\n        description: '',\n        capacity: ''\n    }\n    $scope.timeslot = {\n        time: null,\n        blocked: false,\n        reason: ''\n    }\n\n    $scope.timePickerOptions =\n        step: 15\n        timeFormat: 'G:i'\n        minTime: \"00:00\"\n        maxTime: \"24:00\"\n        appendTo: 'body'\n\n    # load initial data from server\n    $http.get(\"sessionboard/data\").success (data) ->\n        $scope.rooms = data.rooms\n        $scope.rooms.unshift({})\n        $scope.timeslots = data.timeslots\n        $scope.participants = data.participants\n        $scope.proposals = data.proposals\n        $scope.sessionplan = data.sessions\n\n            \n    #\n    # room related\n    #\n\n    $scope.roomModalMode = \"add\"\n    $scope.room_idx = null # for remembering which room to update\n\n    $scope.add_room_form = () ->\n        $scope.roomModalMode = \"add\"\n        $scope.room = {}\n        document.getElementById(\"add-room-form\").reset()\n        $('#add-room-modal').modal('show')\n        $('#room-form-name').focus()\n        undefined\n\n    $scope.add_room = () ->\n        if $scope.room_form.$error.$invalid\n            return\n        $scope.room.id = guid()\n        $scope.rooms.push($scope.room)\n        $scope.room = angular.copy($scope.room)\n        $('#add-room-modal').modal('hide')\n        return\n\n    $scope.edit_room = (idx) ->\n        $scope.roomModalMode = \"edit\"\n        $scope.room = angular.copy($scope.rooms[idx])\n        $scope.room_idx = idx        \n        $('#add-room-modal').modal('show')\n        return\n    \n    $scope.update_room = () ->\n        if $scope.room_form.$error.$invalid\n            return\n        $scope.rooms[$scope.room_idx] = $scope.room\n        $('#add-room-modal').modal('hide')\n        return\n        \n    $scope.delete_room = (idx) ->\n        $scope.rooms.splice(idx,1)\n        undefined\n\n\n    #\n    # timeslot related\n    #\n\n    $scope.timeslotModalMode = \"add\"\n    $scope.timeslot_idx = null # for remembering which timeslot to update\n\n    $scope.add_timeslot_form = () ->\n        $scope.timeslotModalMode = \"add\"\n        document.getElementById(\"add-timeslot-form\").reset()\n\n        # pre-set the next possible time\n        if $scope.timeslots.length\n            last_time = new Date(angular.copy($scope.timeslots[$scope.timeslots.length-1]).time)\n            last_time = new Date(last_time.getTime() + last_time.getTimezoneOffset() * 60000) # convert to UTC\n            new_time = new Date(last_time.getTime() + 60*60000)\n            $(\"#timepicker\").timepicker('setTime', new_time)\n            $scope.timeslot.time = new_time\n        else\n            d = Date.now() # TODO: set the date of the day of the event\n            dd = new Date()\n            dd.setTime(d)\n            dd.setHours(9)\n            dd.setMinutes(0)\n            dd.setSeconds(0)\n            $(\"#timepicker\").timepicker('option', 'minTime', '00:00')\n            $(\"#timepicker\").timepicker('setTime', dd)\n            $scope.timeslot.time = dd\n\n        $('#add-timeslot-modal').modal('show')\n        $('#timepicker').focus()\n        return\n\n    $scope.add_timeslot = () ->\n\n        if $scope.timeslot_form.$error.$invalid\n            return\n\n        d = $scope.timeslot.time\n\n        # get the local timezone offset\n        now = new Date()\n        localOffset = now.getTimezoneOffset()\n        \n        # convert to utc by removing the local offset\n        utc = new Date(d.getTime() - localOffset*60000)\n        \n        $scope.timeslot.time = utc\n        $scope.timeslots.push $scope.timeslot\n\n        $scope.timeslots = _.sortBy($scope.timeslots, (item) ->\n            t = item.time\n            # loaded timeslots are string and not objects\n            if typeof(t) == 'string'\n                return new Date(t)\n            return t\n        )\n        $scope.timeslot = angular.copy($scope.timeslot)\n        $('#add-timeslot-modal').modal('hide')\n        $scope.timeslot.blocked = false\n        $scope.timeslot.reason = \"\"\n        return\n\n    $scope.delete_timeslot = (idx) ->\n        $scope.timeslots.splice(idx,1)\n        undefined\n\n\n    #\n    # slot related\n    #\n\n    $scope.session_id = null # for remembering which session to update (format: $room.id@$slot.time)\n    $scope.session = {}\n    $scope.add_session = (slot, room) ->\n        d = new Date(slot.time)\n        fd = $filter('date')(d, 'hh:mm', 'UTC')\n        idx = $scope.session_idx = room.id+\"@\"+fd\n        if $scope.sessionplan.hasOwnProperty(idx)\n            $scope.session = angular.copy($scope.sessionplan[idx])\n        else\n            $scope.session = \n                sid: guid() # we need a unique id for easier referencing\n                slug: '' # the slug for easier url referencing\n                _id: idx\n                title: ''\n                description: ''\n                moderator: []\n        \n\n        #$scope.room = angular.copy($scope.rooms[idx])\n        $('#edit-session-modal').modal('show')\n        $(\"#ac-title\").focus()\n        selectedItem = null\n        $(\"#ac-title\").autocomplete\n            source: $scope.proposals\n            appendTo: '#edit-session-modal'\n            open: (event, ui) ->\n                selectedItem = null\n            select: (event, ui) ->\n                selectedItem = ui\n            change: (event, ui) ->\n                selected = false\n                if selectedItem\n                    value = selectedItem.item.value\n                else\n                    return\n                user_id = selectedItem.item.user_id\n\n                # update the scope\n                $scope.$apply( () ->\n                    # search for user\n                    for user in $scope.participants\n                        if user._id == user_id\n                            $scope.session.moderator = [user]\n                            break\n                    $scope.session.title = value\n                    $scope.session.description = selectedItem.item.description\n                )\n        return\n\n    $scope.update_session = () ->\n        idx = $scope.session._id\n        $scope.session = angular.copy($scope.session)\n        \n        # create filename for it\n        orig_slug = $scope.session.title.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n        suffix = 0\n        slug = orig_slug + ''\n\n        # check if slug is already taken\n        while true\n            for sid, session of $scope.sessionplan\n                if session.slug == slug and idx != sid\n                    suffix++  \n                    slug = orig_slug+suffix # append number\n                    break\n            break\n\n        $scope.session.slug = slug\n\n        $scope.sessionplan[idx] = $scope.session\n        $('#edit-session-modal').modal('hide')\n        return\n\n\n    $scope.get_session_id = (slot, room) ->\n        d = new Date(slot.time)\n        fd = $filter('date')(d, 'hh:mm', 'UTC')\n        idx = room.id+\"@\"+fd\n        return idx\n     \n    $scope.loadParticipants = () ->\n        deferred = $q.defer()\n        deferred.resolve($scope.participants)\n        return deferred.promise;\n\n    #\n    # server communications\n    #\n\n    $scope.save_to_server = () ->\n        # clean up rooms\n        rooms = angular.copy($scope.rooms)\n        rooms.splice(0,1) # remove first empty element\n        data = \n            rooms: rooms\n            timeslots: $scope.timeslots\n            sessions: $scope.sessionplan\n        $http.post(\"sessionboard/data\", data).success (data) ->\n            # TODO: catch some error here\n            return\n        .error (data) ->\n            # TODO: explain error\n            return\n\n    $scope.$watch( 'rooms', (newValue, oldValue) ->\n        if newValue != oldValue\n            $scope.save_to_server()\n        undefined\n    , true)\n\n    $scope.$watch( 'timeslots', (newValue, oldValue) ->\n        if newValue != oldValue\n            $scope.save_to_server()\n        undefined\n    , true)\n\n\n    $scope.$watch( 'sessionplan', (newValue, oldValue) ->\n        if newValue != oldValue\n            $scope.save_to_server()\n        undefined\n    , true)\n\n\n\n\nINTEGER_REGEXP = ///^\n    [0-9]+\n    $///i\n\n# we only catch . here, the rest is done by the default validator\napp.directive('integer', () ->\n    return {\n        restrict: \"AE\",\n        require: 'ngModel',\n        link: ($scope, elm, attrs, ctrl) ->\n            ctrl.$validators.integer = (modelValue, viewValue) ->\n                if ctrl.$isEmpty(modelValue)\n                    return true\n                if viewValue.match INTEGER_REGEXP\n                    return true\n                \n                # it is invalid\n                return false\n    }\n)\n"}.call(this),function(){var a,b,c=function(a,b){return function(){return a.apply(b,arguments)}};Array.prototype.toDict=function(a){return this.reduce(function(b,c){return null!=c[a]&&(b[c[a]]=c),b},{})},b=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)},a=function(){return b()+b()+"-"+b()+"-"+b()+"-"+b()+"-"+b()+b()+b()},$.fn.serializeObject=function(){var a,b;return b={},a=this.serializeArray(),$.each(a,function(){return void 0!==b[this.name]?(b[this.name].push||(b[this.name]=[b[this.name]]),b[this.name].push(this.value||"")):b[this.name]=this.value||""}),b},function(b){var d,e,f;return f="sessionboard",e={foo:"bar"},d=function(){function d(a,d){this.element=a,this.update_session=c(this.update_session,this),this.add_session_modal=c(this.add_session_modal,this),this.del_timeslot=c(this.del_timeslot,this),this.add_timeslot=c(this.add_timeslot,this),this.add_timeslot_modal=c(this.add_timeslot_modal,this),this.edit_room=c(this.edit_room,this),this.edit_room_modal=c(this.edit_room_modal,this),this.del_room=c(this.del_room,this),this.add_room=c(this.add_room,this),this.add_room_modal=c(this.add_room_modal,this),this.data={},this.options=b.extend({},e,d),this._defaults=e,this._name=f,this.init()}return d.prototype.init=function(){return this.loadState()},d.prototype.update=function(){return this.saveState(),this.render()},d.prototype.loadState=function(){return b.ajax({url:"sessionboard/data",dataType:"json",cache:!1,success:function(a){return function(b){return a.data=b,console.log(a.data.timeslots),a.render()}}(this),error:function(){return function(a,b,c){return console.error("url",b,c.toString())}}(this)})},d.prototype.saveState=function(){var a;return a={rooms:this.data.rooms,timeslots:this.data.timeslots,sessions:this.data.sessions},b.ajax({url:"sessionboard/data",data:JSON.stringify(this.data),contentType:"application/json",type:"POST",success:function(){return function(){return console.log("ok")}}(this),error:function(){return function(){return console.log("not so ok")}}(this)})},d.prototype.get_session_id=function(a,b){var c,d,e;return c=new Date(a.time),d=moment(c).tz("UTC").format("HH:mm"),e=b.id+"@"+d},d.prototype.generate_sessiontable=function(){var a,b,c,d,e,f,g,h,i,j,k;for(e=[],j=this.data.timeslots,f=0,h=j.length;h>f;f++){for(d=j[f],b={time:moment(d.time).format("HH:mm"),blocked:d.blocked,block_reason:d.reason,slots:[]},console.log(b),k=this.data.rooms,g=0,i=k.length;i>g;g++)a=k[g],c=this.get_session_id(d,a),b.slots.push(this.data.sessions[c]?this.data.sessions[c]:{_id:c});e.push(b)}return e},d.prototype.render=function(){var a;return a=JST.sessiontest({data:this.data,sessions:this.generate_sessiontable(),colwidth:90/(this.data.rooms.length+1)}),b("#newsessions").html(a),this.init_handlers()},d.prototype.add_room_modal=function(){var a;return a=JST["room-modal"]({add_room:!0}),b("#modals").html(a),b("#add-room-modal").modal("show"),b("#room-form-name").focus(),b(".add-room-button").click(this.add_room),!1},d.prototype.add_room=function(){var c;return c=b("#add-room-form").serializeObject(),c.id=a(),c.name?c.capacity?(this.data.rooms.push(c),this.update(),void b("#add-room-modal").modal("hide")):alert("Please enter a capacity"):alert("Please enter a name")},d.prototype.del_room=function(a){var c;return confirm(b("body").data("i18n-areyousure"))?(c=b(a.currentTarget).data("index"),this.data.rooms.splice(c,1),this.update()):void 0},d.prototype.edit_room_modal=function(a){var c,d,e;return d=b(a.currentTarget).data("index"),e=this.data.rooms[d],c=JST["room-modal"]({room:e,room_idx:d,add_room:!1}),b("#modals").html(c),b("#add-room-modal").modal("show"),b("#room-form-name").focus(),b(".update-room-button").click(this.edit_room),!1},d.prototype.edit_room=function(){var a,c;return a=b("#add-room-form").serializeObject(),(c=a.room_idx)?a.name?a.capacity?(a=JSON.parse(JSON.stringify(a)),a.room_idx&&delete a.room_idx,this.data.rooms[c]=a,this.update(),b("#add-room-modal").modal("hide"),!1):alert("Please enter a capacity"):alert("Please enter a name"):alert("Error")},d.prototype.set_next_time=function(){var a,c,d,e,f;return d=this.data.timeslots.length,d?(e=new Date(this.data.timeslots[d-1].time),e=new Date(e.getTime()+6e4*e.getTimezoneOffset()),f=new Date(e.getTime()+36e5),b("#timepicker").timepicker("setTime",f)):(a=Date.now(),c=new Date,c.setTime(a),c.setHours(9),c.setMinutes(0),c.setSeconds(0),b("#timepicker").timepicker("option","minTime","00:00"),b("#timepicker").timepicker("setTime",c))},d.prototype.add_timeslot_modal=function(){var a;return a=JST["timeslot-modal"](),b("#modals").html(a),b("#timepicker").timepicker({timeFormat:"G:i",show24:!0}),this.set_next_time(),b("#add-timeslot-modal").modal("show"),b("#timepicker").focus(),b("#add-timeslot-button").click(this.add_timeslot),!1},d.prototype.add_timeslot=function(){var a,c,d,e,f;e=b("#add-timeslot-form").serializeObject(),d=new Date,a=b("#timepicker").timepicker("getTime",d),c=d.getTimezoneOffset(),f=new Date(a-6e4*c),e.time=f.toISOString().replace("Z",""),this.data.timeslots.push(e),this.data.timeslots=_.sortBy(this.data.timeslots,function(a){var b;return b=a.time,"string"==typeof b?new Date(b):b}),this.update(),b("#add-timeslot-modal").modal("hide")},d.prototype.del_timeslot=function(a){var c;return confirm(b("body").data("i18n-areyousure"))?(c=b(a.currentTarget).data("index"),this.data.timeslots.splice(c,1),this.update()):void 0},d.prototype.add_session_modal=function(a){var c,d,e,f,g;return g=b(a.currentTarget).data("id"),e=this.data.sessions[g],e||(e={}),e.session_idx=g,c=JST["session-modal"](e),b("#modals").html(c),d=new Bloodhound({datumTokenizer:Bloodhound.tokenizers.whitespace,queryTokenizer:Bloodhound.tokenizers.whitespace,local:this.data.participants.map(function(a){return a.name})}),b("#moderator").tagsinput({tagClass:"btn btn-info btn-xs",typeaheadjs:{source:d.ttAdapter()}}),f=new Bloodhound({datumTokenizer:Bloodhound.tokenizers.obj.whitespace("label"),queryTokenizer:Bloodhound.tokenizers.whitespace,local:this.data.proposals}),b("#ac-title").typeahead({hint:!0,minLength:1},{name:"proposals",displayKey:"label",source:f.ttAdapter()}).bind("typeahead:select",function(a){return function(c,d){var e,f,g,h,i,j;for(b("#session-description").text(d.description),f=d.user_id,i=a.data.participants,j=[],g=0,h=i.length;h>g;g++)e=i[g],e._id===f?(b("#moderator").tagsinput("removeAll"),j.push(b("#moderator").tagsinput("add",e.name))):j.push(void 0);return j}}(this)),b("#edit-session-modal").modal("show"),b("#update-session-button").click(this.update_session)},d.prototype.update_session=function(){var a,c;return a=b("#edit-session-form").serializeObject(),a.session_idx||alert("An error occurred, please reload the page"),c={sid:null,slug:null,_id:a.session_idx,title:a.title,description:a.description,moderator:a.moderator},this.data.sessions[a.session_idx]=c,this.update(),b("#edit-session-modal").modal("hide")},d.prototype.init_handlers=function(){var a,c;c=this;try{a=this.data.rooms.toDict("id")}catch(d){a={}}return b("#roomcontainment").sortable({axis:"x",helper:"clone",items:"td",placeholder:"sortable-placeholder",containment:"parent",cancel:".not-sortable",opacity:.5,update:function(c){return function(){var d;return d=[],b("#newsessions #roomcontainment .sorted").each(function(){var c;return c=b(this).data("id"),d.push(a[c])}),c.data.rooms=d,c.update()}}(this)}),b(".sessionslot.enabled").draggable({revert:!0,snap:".sessionslot.enabled",zIndex:1e4}).droppable({hoverClass:"btn btn-info",drop:function(a){return function(c,d){var e,f,g;return g=d.draggable.data("id"),e=b(c.target).data("id"),f=a.data.sessions[e],a.data.sessions[e]=a.data.sessions[g],a.data.sessions[e].id=e,f&&(a.data.sessions[g]=f,a.data.sessions[g]=g),a.update()}}(this)}),b("#add-room-modal-button").click(this.add_room_modal),b(".del-room-button").click(this.del_room),b(".edit-room-modal-button").click(this.edit_room_modal),b("#add-timeslot-modal-button").click(this.add_timeslot_modal),b(".del-timeslot-button").click(this.del_timeslot),b(".sessionslot").click(this.add_session_modal)},d}(),b.fn[f]=function(a){return this.each(function(){return b.data(this,"plugin_"+f)?void 0:b.data(this,"plugin_"+f,new d(this,a))})}}(jQuery,window,document),$(document).ready(function(){return $("#newsessions").sessionboard()})}.call(this);
//# sourceMappingURL=admin.min.map