// Generated by CoffeeScript 1.8.0
var INTEGER_REGEXP, app;

app = angular.module('barcamptool', []);

app.config(function($interpolateProvider) {
  return $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
});

app.controller('SessionBoardCtrl', function($scope, $http) {
  $http.get("sessionboard/data").success(function(data) {
    $scope.rooms = data.rooms;
    return $scope.timeslots = data.timeslots;
  });
  $scope.modalMode = "add";
  $scope.room_idx = null;
  $scope.reset_room = function() {
    $scope.room_form.$setPristine();
    $scope.room_form.$setUntouched();
    $scope.room = angular.copy($scope.room);
    return document.getElementById("add-room-form").reset();
  };
  $scope.add_room_form = function() {
    console.log("okok");
    $scope.modalMode = "add";
    document.getElementById("add-room-form").reset();
    $('#add-room-modal').modal('show');
  };
  $scope.add_room = function() {
    if ($scope.room_form.$error.$invalid) {
      return;
    }
    $scope.rooms.push($scope.room);
    $scope.room_form.$setPristine();
    $scope.room_form.$setUntouched();
    $scope.room = angular.copy($scope.room);
    document.getElementById("add-room-form").reset();
    $('#add-room-modal').modal('hide');
  };
  $scope.edit_room = function(idx) {
    $scope.modalMode = "edit";
    $scope.room = angular.copy($scope.rooms[idx]);
    $scope.room_idx = idx;
    $('#add-room-modal').modal('show');
  };
  $scope.update_room = function() {
    if ($scope.room_form.$error.$invalid) {
      return;
    }
    $scope.rooms[$scope.room_idx] = $scope.room;
    $('#add-room-modal').modal('hide');
    return $scope.reset_room();
  };
  $scope.delete_room = function(idx) {
    return $scope.rooms.splice(idx, 1);
  };
  $scope.$watch('rooms', function(newValue, oldValue) {
    return console.log("rooms changes");
  });
  return $scope.room = {
    name: '',
    description: '',
    capacity: ''
  };
});

INTEGER_REGEXP = /^[0-9]+$/i;

app.directive('integer', function() {
  return {
    restrict: "AE",
    require: 'ngModel',
    link: function($scope, elm, attrs, ctrl) {
      return ctrl.$validators.integer = function(modelValue, viewValue) {
        if (ctrl.$isEmpty(modelValue)) {
          return true;
        }
        if (viewValue.match(INTEGER_REGEXP)) {
          return true;
        }
        return false;
      };
    }
  };
});
